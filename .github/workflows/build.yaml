name: Test & build Docker image

on:
  push:
    branches: [main]
    tags: ["v*", "[0-9]+.[0-9]+.[0-9]+*"]
  pull_request:
  # schedule:
  #   - cron: "0 2 * * 6"
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build (default: current branch)'
        required: false
        default: ''
        type: string
      push_to_dockerhub:
        description: 'Push to Docker Hub (default: false for manual runs)'
        required: false
        default: false
        type: boolean

env:
  IMAGE_NAME: zhoujie218/php-nginx
  IMAGE_TAG: ${{ github.sha }}
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Display build info
        run: |
          echo "Build triggered by: ${{ github.event_name }}"
          echo "Current branch: $(git branch --show-current)"
          echo "Commit SHA: ${{ github.sha }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual build - Branch: ${{ github.event.inputs.branch || 'current' }}"
            echo "Push to Docker Hub: ${{ github.event.inputs.push_to_dockerhub }}"
          fi

      - name: Extract version from tag
        if: contains(github.ref, 'refs/tags/')
        id: extract_version
        run: |
          # 提取版本号，支持 v1.0.0 和 1.0.0 格式
          VERSION=${GITHUB_REF#refs/tags/}
          # 移除 v 前缀（如果存在）
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
          echo "Tag name: ${GITHUB_REF#refs/tags/}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |-
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Smoke test image
        run: |-
          docker compose -f docker-compose.test.yml up -d app
          sleep 2
          docker compose -f docker-compose.test.yml run sut

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Login to Docker Hub
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || contains(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_to_dockerhub == 'true')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build multi-arch image and push latest tag
        if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.push_to_dockerhub == 'true')
        run: |-
          docker buildx build \
            --cache-from=$IMAGE_NAME:latest \
            --push \
            -t $IMAGE_NAME:latest \
            --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 \
            .

      - name: Build multi-arch image and push release tag
        if: contains(github.ref, 'refs/tags/')
        run: |-
          docker buildx build \
            --cache-from=$IMAGE_NAME:latest \
            --push \
            -t $IMAGE_NAME:${{ steps.extract_version.outputs.VERSION }} \
            -t $IMAGE_NAME:${{ steps.extract_version.outputs.TAG_NAME }} \
            --platform linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 \
            .

      - name: Create GitHub Release
        if: contains(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.TAG_NAME }}
          release_name: Release ${{ steps.extract_version.outputs.TAG_NAME }}
          body: |
            ## Docker Image Release ${{ steps.extract_version.outputs.TAG_NAME }}
            
            ### 镜像标签
            - `${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}`
            - `${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.TAG_NAME }}`
            
            ### 支持的架构
            - linux/amd64
            - linux/arm64
            - linux/arm/v7
            - linux/arm/v6
            
            ### 使用方法
            ```bash
            # 拉取最新版本
            docker pull ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
            
            # 运行容器
            docker run -p 80:8080 ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
            ```
            
            ### 变更日志
            请查看 [提交历史](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}) 了解详细变更。
          draft: false
          prerelease: false
