[global]
; Log to stderr
error_log = /dev/stderr

[www]
; The address on which to accept FastCGI requests.
listen = /run/php-fpm.sock

; Enable status page
pm.status_path = /fpm-status

; Process manager configuration
pm = ${FPM_PM_MODE:-ondemand}

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
pm.max_children = ${FPM_MAX_CHILDREN:-20}

; Process management for different environments
pm.start_servers = ${FPM_START_SERVERS:-2}
pm.min_spare_servers = ${FPM_MIN_SPARE_SERVERS:-1}
pm.max_spare_servers = ${FPM_MAX_SPARE_SERVERS:-10}

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
pm.process_idle_timeout = ${FPM_PROCESS_IDLE_TIMEOUT:-10s}

; The number of requests each child process should execute before respawning.
pm.max_requests = ${FPM_MAX_REQUESTS:-1000}

; Make sure the FPM workers can reach the environment variables for configuration
clear_env = no

; Catch output from PHP
catch_workers_output = yes

; Remove the 'child 10 said into stderr' prefix in the log and only show the actual message
decorate_workers_output = no

; Enable ping page to use in healthcheck
ping.path = /fpm-ping

; Additional FPM optimizations
request_terminate_timeout = ${FPM_REQUEST_TERMINATE_TIMEOUT:-0}
request_slowlog_timeout = ${FPM_REQUEST_SLOWLOG_TIMEOUT:-0}
slowlog = ${FPM_SLOWLOG:-/dev/stderr}
